//
// Autogenerated by Thrift Compiler (0.8.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

if (typeof spr === 'undefined') {
  spr = {};
}
if (typeof spr.thrift === 'undefined') {
  spr.thrift = {};
}
if (typeof spr.thrift.admin === 'undefined') {
  spr.thrift.admin = {};
}
spr.thrift.admin.User = function(args) {
  this.email = null;
  this.loginName = null;
  this.givenName = null;
  this.surname = null;
  this.instructor = null;
  this.groupIds = null;
  if (args) {
    if (args.email !== undefined) {
      this.email = args.email;
    }
    if (args.loginName !== undefined) {
      this.loginName = args.loginName;
    }
    if (args.givenName !== undefined) {
      this.givenName = args.givenName;
    }
    if (args.surname !== undefined) {
      this.surname = args.surname;
    }
    if (args.instructor !== undefined) {
      this.instructor = args.instructor;
    }
    if (args.groupIds !== undefined) {
      this.groupIds = args.groupIds;
    }
  }
};
spr.thrift.admin.User.prototype = {};
spr.thrift.admin.User.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.loginName = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.givenName = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.surname = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.BOOL) {
        this.instructor = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.groupIds = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI64().value;
          this.groupIds.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

spr.thrift.admin.User.prototype.write = function(output) {
  output.writeStructBegin('User');
  if (this.email) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 1);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  if (this.loginName) {
    output.writeFieldBegin('loginName', Thrift.Type.STRING, 2);
    output.writeString(this.loginName);
    output.writeFieldEnd();
  }
  if (this.givenName) {
    output.writeFieldBegin('givenName', Thrift.Type.STRING, 3);
    output.writeString(this.givenName);
    output.writeFieldEnd();
  }
  if (this.surname) {
    output.writeFieldBegin('surname', Thrift.Type.STRING, 4);
    output.writeString(this.surname);
    output.writeFieldEnd();
  }
  if (this.instructor) {
    output.writeFieldBegin('instructor', Thrift.Type.BOOL, 5);
    output.writeBool(this.instructor);
    output.writeFieldEnd();
  }
  if (this.groupIds) {
    output.writeFieldBegin('groupIds', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.I64, this.groupIds.length);
    for (var iter7 in this.groupIds)
    {
      if (this.groupIds.hasOwnProperty(iter7))
      {
        iter7 = this.groupIds[iter7];
        output.writeI64(iter7);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

spr.thrift.admin.Group = function(args) {
  this.id = null;
  this.name = null;
  if (args) {
    if (args.id !== undefined) {
      this.id = args.id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
  }
};
spr.thrift.admin.Group.prototype = {};
spr.thrift.admin.Group.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.id = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

spr.thrift.admin.Group.prototype.write = function(output) {
  output.writeStructBegin('Group');
  if (this.id) {
    output.writeFieldBegin('id', Thrift.Type.I64, 1);
    output.writeI64(this.id);
    output.writeFieldEnd();
  }
  if (this.name) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

